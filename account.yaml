################################################################################
#                              API Information                                 #
################################################################################
swagger: '2.0'
info:
  title: OSB Account
  description: Online seat booking Account service
  version: "1.0.0"
host: api.account.osb.ibm.com
schemes:
  - https
basePath: /osb/account/v1

################################################################################
#                              Parameters                                      #
################################################################################
parameters:
  userUUID:
    name: userUUID
    in: path
    description: User unique UUID
    required: true
    type: string  
  tokenId:
    name: tokenId
    in: header
    description: Token for valid user.
    type: string
    required: true
  
################################################################################
#                              Paths                                           #
################################################################################
  
paths:
  /osb/account/_register:
    post:
      summary: Register user
      description: "Register user"
      operationId: registerUser
      parameters:
        - name: UserData
          in: body
          description: User data to create a user. 
          required: true
          schema:
           $ref: "#/definitions/UserData"
      responses:
        "200":
          description: Returns true or false based on the successfull and unsuccessfull posting
          schema:
            type: boolean
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: School Not Found
          schema:
            $ref: "#/definitions/Error"    
        "405":
          description: Validation Exception
          schema:
            $ref: "#/definitions/Error"
  /osb/account/_login:
    put:
      summary: Generate the token which will be used while calling other API.
      description: "This API will validate the user with the given user id and password and return the acccess token which will be used to call other API"
      operationId: login
      parameters:
        - name: Valid user
          in: body
          description: A valid user with valid user id and password. 
          required: true
          schema:
           $ref: "#/definitions/User"
      responses:
        "200":
          description: Token string
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: School Not Found
          schema:
            $ref: "#/definitions/Error"    
        "405":
          description: Validation Exception
          schema:
            $ref: "#/definitions/Error"      
  /osb/account/_logout:
    put:
      summary: Logout API to delete the token after uses.
      description: "This API delete the generated token which was generated by login operation"
      operationId: logout
      parameters:
        - $ref: "#/parameters/tokenId"
      responses:
        "200":
          description: Returns true or false based on the successfull and unsuccessfull posting
          schema:
            type: boolean
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: School Not Founda
          schema:
            $ref: "#/definitions/Error"    
        "405":
          description: Validation Exception
          schema:
            $ref: "#/definitions/Error"
  /osb/account/_validate:
    get:
      summary: Validate the user if user is valid and logged in.
      description: "This API will validate the user based on the token id provided"
      operationId: validateUser
      parameters:
        - $ref: "#/parameters/tokenId"
      responses:
        "200":
          description: Returns true or false based on the successfull and unsuccessfull posting
          schema:
             $ref: "#/definitions/ValidUser"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: School Not Founda
          schema:
            $ref: "#/definitions/Error"    
        "405":
          description: Validation Exception
          schema:
            $ref: "#/definitions/Error"            
################################################################################
#                              Definitions                                     #
################################################################################                    
definitions:
  UserData:
    type: object
    properties:
      user_name:
        type: string
        description: User first name
      user_pwd:
        type: string
        description: Cloud admin user password. Retrieving service details can be done any valid user in a valid role in a valid branch
      email_id:
        type: string
        description: User email id
      role_name:
        type: string
        description: User Role Name  
  User:
    type: object
    properties:
      login_id:
        type: string
        description: User login id to login into the system
      login_pwd:
        type: string
        description: User login password to login into the system
  ValidUser:
    type: object
    properties:
      role_name:
        type: string
        description: role name of the user
      branch_id:
        type: string
        description: branch id where user belongs       
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
